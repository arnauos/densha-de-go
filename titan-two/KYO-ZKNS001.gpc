#pragma METAINFO("Journey to Kyoto with Zuiki ZKNS-001 PS4/5", 1, 10, "ZeusII")

// Allows to control Japanese Rail Sim: Journey to Kyoto with your Zuiki ZKNS-001 controller

// Connect Zuiki to Titan Two Port A
// If using on PS5, remember to connect a third party USB controller on Port B to prevent recurrent disconnects every few minutes

// Game Settings:
// - Control scheme: A
// - Electric brake: On (Optional)
// - Stick mode: Release

// Press (-) to enable Electric-Brake control at any time -> blue led on titan two
// Keep pressing the following key depending on the level you want to apply:
//		(left) eBrake1
//		(down) eBrake2
//		(right) eBrake3
//		(Y)	eBrake4
//		(X) eBrake5

// changelist
// 1.00 - adapted from original Plug&play script
// 1.10 - added Electric Brake control

#include <remapper.gph>

const uint8 DenshaDeGo[43] = {
    RMP_USB_A,
    BUTTON_1,  BUTTON_2,  BUTTON_3,  BUTTON_4,  BUTTON_5,  BUTTON_6,  BUTTON_7, 
    BUTTON_8,  BUTTON_9,  BUTTON_10, BUTTON_11, BUTTON_12, BUTTON_13, BUTTON_14, 
    BUTTON_15, BUTTON_16, BUTTON_17, BUTTON_18, BUTTON_19, BUTTON_20, BUTTON_21, 
    STICK_1_X, STICK_1_Y, ACCEL_2_X, ACCEL_2_Y, 
    POINT_1_X, POINT_1_Y, POINT_2_X, POINT_2_Y, 
    ACCEL_1_X, ACCEL_1_Y, ACCEL_1_Z, STICK_2_X, STICK_2_Y, ACCEL_2_Z, 
    GYRO_1_X,  GYRO_1_Y,  GYRO_1_Z,
    PADDLE_1,  PADDLE_2,  PADDLE_3,  PADDLE_4
};

bool EBRAKE = FALSE;

init {
    remapper(DenshaDeGo);
}

void LED(fix32 a, fix32 b, fix32 c, fix32 d)
{
    led_set(LED_1, a, 0);
    led_set(LED_2, b, 0);
    led_set(LED_3, c, 0);
    led_set(LED_4, d, 0);
}

main {
	
	//eBRAKE Mode toggle - (-)
	if (event_active(BUTTON_2)) {
		set_val(BUTTON_2, 0);
		if (EBRAKE == FALSE) { 
			//Enter eBrake Mode
			EBRAKE = TRUE;
			LED(0.0, 5.0, 0.0, 0.0); // Red
		}
		else {
			//Exit eBrake Mode
			EBRAKE = FALSE;
			LED(0.0, 0.0, 0.0, 5.0); // Blue
		}
	}

	// Throttle
	if (get_val(ACCEL_2_Y) < -98.0) { // EB
		set_val(STICK_1_X, 100);
		set_val(STICK_1_Y, -30);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
		set_val(BUTTON_8, 0);
	}
	else if (get_val(ACCEL_2_Y) > -98.0 && get_val(ACCEL_2_Y) < -90.0) { // B8
		set_val(STICK_1_X, 100);
		set_val(STICK_1_Y, 50);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -90.0 && get_val(ACCEL_2_Y) < -80.0) { // B7
		set_val(STICK_1_X, 100);
		set_val(STICK_1_Y, 50);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -80.0 && get_val(ACCEL_2_Y) < -70.0) { // B6
		set_val(STICK_1_X, 60);
		set_val(STICK_1_Y, 90);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -70.0 && get_val(ACCEL_2_Y) < -58.0) { // B5
		set_val(STICK_1_X, 20);
		set_val(STICK_1_Y, 100);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -58.0 && get_val(ACCEL_2_Y) < -48.0) { // B4
		set_val(STICK_1_X, -40);
		set_val(STICK_1_Y, 100);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -48.0 && get_val(ACCEL_2_Y) < -37.0) { // B3
		set_val(STICK_1_X, -70);
		set_val(STICK_1_Y, 85);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -37.0 && get_val(ACCEL_2_Y) < -26.0) { // B2
		set_val(STICK_1_X, -90);
		set_val(STICK_1_Y, 65);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -26.0 && get_val(ACCEL_2_Y) < -10.0) { // B1
		set_val(STICK_1_X, -100);
		set_val(STICK_1_Y, 45);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > -10.0 && get_val(ACCEL_2_Y) < 12.0) { // N
		set_val(STICK_1_X, 0);
		set_val(STICK_1_Y, 0);
		set_val(STICK_2_X, 0);
		set_val(STICK_2_Y, 0);
	}
	else if (get_val(ACCEL_2_Y) > 12.0 && get_val(ACCEL_2_Y) < 35.0) { // P1
		set_val(STICK_1_X, -100);
		set_val(STICK_1_Y, 0);
		set_val(STICK_2_X, 100); 
		set_val(STICK_2_Y, -35); 
	}
	else if (get_val(ACCEL_2_Y) > 35.0 && get_val(ACCEL_2_Y) < 53.0) { // P2
		set_val(STICK_1_X, -100);
		set_val(STICK_1_Y, 0);
		set_val(STICK_2_X, 100); 
		set_val(STICK_2_Y, 30);
	}
	else if (get_val(ACCEL_2_Y) > 53.0 && get_val(ACCEL_2_Y) < 70.0) { // P3
		set_val(STICK_1_X, -100);
		set_val(STICK_1_Y, 0);
		set_val(STICK_2_X, 80);
		set_val(STICK_2_Y, 80); 
	}
	else if (get_val(ACCEL_2_Y) > 70.0 && get_val(ACCEL_2_Y) < 90.0) { // P4
		set_val(STICK_1_X, -100);
		set_val(STICK_1_Y, 0);
		set_val(STICK_2_X, 60); 
		set_val(STICK_2_Y, 100);  
	}
	else if (get_val(ACCEL_2_Y) > 90.0) { // P5
		set_val(STICK_1_X, -100);
		set_val(STICK_1_Y, 0);
		set_val(STICK_2_X, 60); 
		set_val(STICK_2_Y, 100);  
	}
	
	//EBRAKE ACTIVATION, REQUIRES PRESSING (-) TO ENABLE EBRAKE -> RED TITAN TWO LED
	if(EBRAKE == TRUE)
	{
		if(get_val(BUTTON_12))	//LEFT EBRAKE1
		{
			set_val(BUTTON_12, 0);
			set_val(STICK_1_X, 0);
			set_val(STICK_1_Y, 0);
			set_val(STICK_2_X, 12.94); 
			set_val(STICK_2_Y, -100); 
		}
		else if(get_val(BUTTON_11)) //LEFT EBRAKE2
		{
			set_val(BUTTON_11, 0);
			set_val(STICK_1_X, 0);
			set_val(STICK_1_Y, 0);
			set_val(STICK_2_X, -45.10); 
			set_val(STICK_2_Y, -100); 
		}
		else if(get_val(BUTTON_13)) //RIGHT EBRAKE3
		{
			set_val(BUTTON_13, 0);
			set_val(STICK_1_X, 0);
			set_val(STICK_1_Y, 0);
			set_val(STICK_2_X, -74.9); 
			set_val(STICK_2_Y, -83.31); 
		}
		else if(get_val(BUTTON_17)) //Y EBRAKE4
		{
			set_val(BUTTON_17, 0);
			set_val(STICK_1_X, 0);
			set_val(STICK_1_Y, 0);
			set_val(STICK_2_X, -93.73); 
			set_val(STICK_2_Y, -56.86); 
		}
		else if(get_val(BUTTON_14)) //X EBRAKE5
		{
			set_val(BUTTON_16, 0);
			set_val(STICK_1_X, 0);
			set_val(STICK_1_Y, 0);
			set_val(STICK_2_X, -100); 
			set_val(STICK_2_Y, -13); 
		}
	}
	
}
